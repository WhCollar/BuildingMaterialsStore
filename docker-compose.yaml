version: '3.8'

networks:
  centerstroy:
    driver: bridge
    name: centerstroy

volumes:
  certbotAutorization:
  etc-letsencript:

services:
  certbot:
    image: certbot/certbot
    depends_on:
      - frontend
    container_name: certbot
    volumes:
      - etc-letsencript:/etc/letsencript
      - certbotAutorization:/var/www/html
    command: certonly --webroot --webroot-path=/var/www/html --email monserka@gmail.com --agree-tos --no-eff-email -d tsenterstroy72.store

  frontend:
    restart: always
    build:  
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    depends_on:
      - api
    volumes:
      - ./frontend/nginx:/etc/nginx/conf.d
      - etc-letsencript:/etc/letsencript
      - certbotAutorization:/var/www/html
    ports:
      - 80:80
    networks:
      - centerstroy

  api:
    build:
      context: ./TsentrstroyAPI
      dockerfile: Dockerfile
    container_name: api
    volumes:
      - ./TsentrstroyAPI/TsentrstroyAPI/wwwroot:/app/wwwroot
    ports:
      - "8000:80"
    restart: always
    depends_on:
      - "postgres"
    networks:
      - centerstroy

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_DB: "TsentrstroyDatabase"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "toor"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./dbscripts/seed.sql:/docker-entrypoint-initdb.d/seed.sql
      - .:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: always
    networks:
      - centerstroy
